//
// Generated file, do not edit! Created by opp_msgtool 6.0 from gradys_simulations/protocols/messages/internal/CommunicationCommand.msg.
//

#ifndef __GRADYS_SIMULATIONS_COMMUNICATIONCOMMAND_M_H
#define __GRADYS_SIMULATIONS_COMMUNICATIONCOMMAND_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// opp_msgtool version check
#define MSGC_VERSION 0x0600
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgtool: 'make clean' should help.
#endif


namespace gradys_simulations {

class CommunicationCommand;

}  // namespace gradys_simulations

#include "inet/common/packet/chunk/Chunk_m.h" // import inet.common.packet.chunk.Chunk


namespace gradys_simulations {

/**
 * Enum generated from <tt>gradys_simulations/protocols/messages/internal/CommunicationCommand.msg:20</tt> by opp_msgtool.
 * <pre>
 * enum CommunicationCommandType
 * {
 *     // Sets the payload that the communication module sends
 *     SET_PAYLOAD = 0;
 *     // Sets the target of the communication message (null means broadcast)
 *     SET_TARGET = 1;
 *     // Sends a one time message with the payload AND target specified
 *     SEND_MESSAGE = 2;
 * }
 * </pre>
 */
enum CommunicationCommandType {
    SET_PAYLOAD = 0,
    SET_TARGET = 1,
    SEND_MESSAGE = 2
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const CommunicationCommandType& e) { b->pack(static_cast<int>(e)); }
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, CommunicationCommandType& e) { int n; b->unpack(n); e = static_cast<CommunicationCommandType>(n); }

/**
 * Class generated from <tt>gradys_simulations/protocols/messages/internal/CommunicationCommand.msg:30</tt> by opp_msgtool.
 * <pre>
 * // Message declaration for the communication command
 * message CommunicationCommand
 * {
 *     // Command Id
 *     CommunicationCommandType commandType;
 * 
 *     // Template for the SET_PAYLOAD message type (message that the communication module should send)
 *     inet::FieldsChunk *payloadTemplate = nullptr;
 * 
 *     // Target for the set target command
 *     string target;
 * }
 * </pre>
 */
class CommunicationCommand : public ::omnetpp::cMessage
{
  protected:
    CommunicationCommandType commandType = static_cast<gradys_simulations::CommunicationCommandType>(-1);
    ::inet::FieldsChunk * payloadTemplate = nullptr;
    ::omnetpp::opp_string target;

  private:
    void copy(const CommunicationCommand& other);

  protected:
    bool operator==(const CommunicationCommand&) = delete;

  public:
    CommunicationCommand(const char *name=nullptr, short kind=0);
    CommunicationCommand(const CommunicationCommand& other);
    virtual ~CommunicationCommand();
    CommunicationCommand& operator=(const CommunicationCommand& other);
    virtual CommunicationCommand *dup() const override {return new CommunicationCommand(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    virtual CommunicationCommandType getCommandType() const;
    virtual void setCommandType(CommunicationCommandType commandType);

    virtual const ::inet::FieldsChunk * getPayloadTemplate() const;
    virtual ::inet::FieldsChunk * getPayloadTemplateForUpdate() { return const_cast<::inet::FieldsChunk *>(const_cast<CommunicationCommand*>(this)->getPayloadTemplate());}
    virtual void setPayloadTemplate(::inet::FieldsChunk * payloadTemplate);

    virtual const char * getTarget() const;
    virtual void setTarget(const char * target);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const CommunicationCommand& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, CommunicationCommand& obj) {obj.parsimUnpack(b);}


}  // namespace gradys_simulations


namespace omnetpp {

template<> inline gradys_simulations::CommunicationCommand *fromAnyPtr(any_ptr ptr) { return check_and_cast<gradys_simulations::CommunicationCommand*>(ptr.get<cObject>()); }

}  // namespace omnetpp

#endif // ifndef __GRADYS_SIMULATIONS_COMMUNICATIONCOMMAND_M_H

